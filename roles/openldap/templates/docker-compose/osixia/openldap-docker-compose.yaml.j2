version: '3.7'

services:
  server:
    image: {{ openldap_image }}:{{ openldap_version }}
    volumes:
    - {{ ldap_dir_data }}:/var/lib/ldap
    - {{ ldap_dir_config }}:/etc/ldap/slapd.d
    - {{ ldap_dir_certs }}:/container/service/slapd/assets/certs
    ports:
    - "{{ ldap_port_plain }}:389"
    - "{{ ldap_port_ssl }}:636"
    command:
    - --copy-service
    - --loglevel
    - debug
    restart: unless-stopped
#    domainname: "{{ ansible_domain }}"
    hostname: "{{ ansible_host }}"
    tty: "true"
    stdin_open: "true"
    logging:
      options:
        max-size: "{{ docker_logging_max_size }}"
        max-file: "{{ docker_logging_max_file }}"
    environment:
      LDAP_HOST: 0.0.0.0
      LDAP_LOG_LEVEL: "{{ ldap_log_level }}"
      LDAP_ORGANISATION: "{{ ldap_organisation }}"
      LDAP_DOMAIN: "{{ ldap_domain }}"
      LDAP_BASE_DN: "{{ ldap_base_dn }}"

      LDAP_ADMIN_PASSWORD: "{{ ldap_pass_admin }}"
      LDAP_CONFIG_PASSWORD: "{{ ldap_pass_config }}"

      LDAP_TLS_VERIFY_CLIENT: "try"
      LDAP_TLS: "true"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC"
      LDAP_TLS_CRT_FILENAME: "server.crt"
      LDAP_TLS_KEY_FILENAME: "server.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      LDAP_SSL_HELPER_PREFIX: "ldap"

      LDAP_READONLY_USER: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"

      LDAP_BACKEND: "mdb"
      LDAP_RFC2307BIS_SCHEMA: "true"

      LDAP_REPLICATION: "true"
      LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn=\"cn=admin,cn=config\" bindmethod=simple credentials={{ ldap_pass_config }} searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1 starttls=critical"
      LDAP_REPLICATION_DB_SYNCPROV: "binddn=\"cn=admin,{{ ldap_base_dn }}\" bindmethod=simple credentials={{ ldap_pass_admin }} searchbase=\"{{ ldap_base_dn }}\" type=refreshAndPersist interval=00:00:00:10 retry=\"60 +\" timeout=1 starttls=critical"
      LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:[{% for host in ansible_play_hosts %}'ldap://{{ hostvars[host]['ansible_host'] }}'{% if not loop.last %},{% endif %}{% endfor %}]"

      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
